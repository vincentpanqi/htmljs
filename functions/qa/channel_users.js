// Generated by CoffeeScript 1.9.3
(function() {
  var ChannelUsers, Users, func;

  ChannelUsers = new __BaseModel('qa/channel_users');

  ChannelUsers.sync();

  Users = new __BaseModel('users');

  Users.hasOne(ChannelUsers, {
    foreignKey: "user_id"
  });

  ChannelUsers.belongsTo(Users, {
    foreignKey: "user_id"
  });

  func = new __BaseFunction(ChannelUsers);

  func.getAll = function(page, count, condition, order, include, callback) {
    var query;
    if (arguments.length === 4) {
      callback = order;
      order = null;
      include = null;
    } else if (arguments.length === 5) {
      callback = include;
      include = null;
    }
    query = {
      offset: (page - 1) * count,
      limit: count,
      order: order || "id desc",
      raw: true
    };
    if (condition) {
      query.where = condition;
    }
    query.include = [Users];
    return ChannelUsers.findAll(query).success(function(ms) {
      return callback(null, ms);
    }).error(function(e) {
      return callback(e);
    });
  };

  func.checkAlready = function(channelId, userId, callback) {
    return ChannelUsers.find({
      where: {
        channel_id: channelId,
        user_id: userId
      }
    }).success(function(user) {
      if (user) {
        return callback(new Error('已经加入过'));
      } else {
        return callback(null);
      }
    }).error(function(e) {
      return callback(e);
    });
  };

  module.exports = func;

}).call(this);
