// Generated by CoffeeScript 1.9.3
(function() {
  var Act, ActJoiner, User, func_act;

  Act = __M('acts');

  Act.sync();

  ActJoiner = __M('act_joiners');

  ActJoiner.sync();

  User = __M('users');

  User.hasMany(ActJoiner, {
    foreignKey: "user_id"
  });

  ActJoiner.belongsTo(User, {
    foreignKey: "user_id"
  });

  Act.hasMany(ActJoiner, {
    foreignKey: "act_id"
  });

  ActJoiner.belongsTo(Act, {
    foreignKey: "act_id"
  });

  func_act = {
    addJoiner: function(act_id, user, callback) {
      return ActJoiner.find({
        where: {
          act_id: act_id,
          user_id: user.id
        }
      }).success(function(aj) {
        if (aj) {
          return callback(new Error('已经报名过'));
        } else {
          return ActJoiner.create({
            act_id: act_id,
            user_id: user.id,
            user_headpic: user.head_pic,
            user_nick: user.nick
          }).success(function(aj) {
            return callback(null, aj);
          }).error(function(e) {
            return callback(e);
          });
        }
      }).error(function(e) {
        return callback(e);
      });
    },
    getAllJoiners: function(act_id, callback) {
      return ActJoiner.findAll({
        where: {
          act_id: act_id
        },
        include: [User]
      }).success(function(ajs) {
        return callback(null, ajs);
      }).error(function(e) {
        return callback(e);
      });
    },
    getAll: function(page, count, condition, order, include, callback) {
      var query;
      if (arguments.length === 4) {
        callback = order;
        order = null;
        include = null;
      } else if (arguments.length === 5) {
        callback = include;
        include = null;
      }
      query = {
        offset: (page - 1) * count,
        limit: count,
        order: order || "id desc"
      };
      if (condition) {
        query.where = condition;
      }
      if (include) {
        query.include = include;
      }
      return Act.findAll(query).success(function(ms) {
        return callback(null, ms);
      }).error(function(e) {
        return callback(e);
      });
    },
    getByUUID: function(uuid, callback) {
      return Act.find({
        where: {
          uuid: uuid
        }
      }).success(function(act) {
        if (!act) {
          return callback(new Error('不存在的活动'));
        } else {
          return callback(null, act);
        }
      }).error(function(e) {
        return callback(e);
      });
    }
  };

  __FC(func_act, Act, ['delete', 'update', 'add', 'getById', 'count', 'addCount']);

  module.exports = func_act;

}).call(this);
