// Generated by CoffeeScript 1.9.3
(function() {
  module.exports = function(req, res, next) {
    var condition, count, page;
    condition = null;
    if (req.query.filter) {
      condition = condition || {};
      req.query.filter.split(":").forEach(function(f) {
        var kv, match;
        kv = f.split('|');
        if (kv.length) {
          if (match = kv[1].match(/^not(.*)$/)) {
            condition[kv[0]] = {
              ne: match[1] * 1
            };
          } else {
            condition[kv[0]] = kv[1];
          }
          return res.locals["filter_" + kv[0]] = kv[1];
        }
      });
    }
    console.log(condition);
    if (req.query.channel_id) {
      res.locals.channel_id = req.query.channel_id;
      condition = condition || {};
      condition.channel_id = req.query.channel_id;
    }
    page = req.query.page || 1;
    count = req.query.count || 20;
    return (__F('question')).count(condition, function(error, _count) {
      console.log(_count);
      if (error) {
        return next(error);
      } else {
        res.locals.total = _count;
        res.locals.totalPage = Math.ceil(_count / count);
        res.locals.page = req.query.page || 1;
        return (__F('question')).getAllWithAnswer(page, count, condition, "sort desc,id desc", function(error, questions) {
          if (error) {
            return next(error);
          } else {
            res.locals.questions = questions;
            return next();
          }
        });
      }
    });
  };

}).call(this);
