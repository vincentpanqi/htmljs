// Generated by CoffeeScript 1.9.3
(function() {
  var func_article, func_blog, func_search, moment;

  func_article = __F('blog/article');

  func_blog = __F('blog/blog');

  moment = require('moment');

  func_search = __F('search');

  module.exports.controllers = {
    "/": {
      get: function(req, res, next) {
        return res.render('blog/index.jade');
      }
    },
    "/add-article": {
      get: function(req, res, next) {
        return res.end('ok');
      },
      post: function(req, res, next) {
        var result;
        result = {
          success: 0,
          info: ''
        };
        if (!req.body.time || !req.body.title || !req.body.content) {
          result.info = "error";
          return res.send(result);
        } else {
          return func_blog.getById(req.body.blog_id, function(e, blog) {
            if (e) {
              result.info = e.message;
              return res.send(result);
            } else {
              return func_article.getByUrl(req.body.url, function(error, article) {
                if (article) {
                  result.info = "error";
                  return res.send(result);
                } else {
                  return func_article.add({
                    blog_id: req.body.blog_id,
                    title: req.body.title.replace(/<[^>]*?>/g, ""),
                    content: req.body.content,
                    user_id: blog.user_id,
                    url: req.body.url,
                    time: moment(req.body.time.replace(/年|月/g, '-').replace(/日/g, '')).valueOf()
                  }, function(error, article) {
                    if (error) {
                      result.info = error.message;
                    } else {
                      func_blog.addCount(req.body.blog_id, 'article_count', function() {});
                      result.success = 1;
                      func_search.add({
                        type: "blog",
                        "pid": article.uuid,
                        "title": article.title,
                        "html": article.content.replace(/<[^>]*>/g, ""),
                        "udid": article.uuid,
                        "id": article.id
                      }, function() {});
                    }
                    return res.send(result);
                  });
                }
              });
            }
          });
        }
      }
    },
    "/add-blog": {
      get: function(req, res, next) {
        return res.render('blog/add-blog.jade');
      },
      post: function(req, res, next) {
        return func_blog.add(req.body, function(error, blog) {
          if (error) {
            return next(error);
          } else {
            return res.redirect('/blog');
          }
        });
      }
    },
    "/add-one": {
      post: function(req, res, next) {
        var result;
        result = {
          success: 0,
          info: ""
        };
        return func_article.add(req.body, function(error, article) {
          if (error) {
            return res.send('hihihi(' + JSON.stringify(result) + ')');
          } else {
            result.success = 1;
            return res.send('hihihi(' + JSON.stringify(result) + ')');
          }
        });
      }
    },
    "/all.json": {
      get: function(req, res, next) {
        var obj;
        if (res.locals.articles) {
          res.locals.articles.forEach(function(a) {
            a.content = a.content.replace(/<[^>]*?>/g, '').replace(/\s/g, '').substr(0, 100);
            a.title = a.title.replace(/<[^>]*?>/g, '').replace(/\s/g, '').substr(0, 100);
            return a.time = moment(a.createdAt).fromNow();
          });
        }
        obj = {};
        obj.total = res.locals.total;
        obj.totalPage = res.locals.totalPage;
        obj.page = res.locals.page;
        obj.articles = res.locals.articles;
        return res.send(obj);
      }
    },
    "/:id.json": {
      get: function(req, res, next) {
        return func_article.getById(req.params.id, function(error, blog) {
          if (error) {
            return next(error);
          } else {
            blog.title = blog.title.replace(/<[^>]*?>/g, '').replace(/\s/g, '').substr(0, 100);
            blog.time = moment(blog.createdAt).fromNow();
            return res.send(blog);
          }
        });
      }
    },
    "/:id/update": {
      get: function(req, res, next) {
        return func_article.update(req.params.id, req.query, function(error, blog) {
          if (error) {
            return next(error);
          } else {
            return res.redirect("back");
          }
        });
      }
    },
    "/:id": {
      get: function(req, res, next) {
        return func_article.getById(req.params.id, function(error, blog) {
          if (error) {
            return next(error);
          } else {
            res.locals.blog = blog;
            func_article.addCount(req.params.id, 'visit_count', function() {});
            return res.render('blog/jump.jade');
          }
        });
      }
    }
  };

  module.exports.filters = {
    "/": {
      get: ['freshLogin', 'blog/get-all-blogs', 'blog/get-all-articles', 'tag/all-tags']
    },
    "/add-blog": {
      get: ['checkLogin', 'checkAdmin'],
      post: ['checkLogin', 'checkAdmin']
    },
    "/all.json": {
      get: ['blog/get-all-articles']
    }
  };

}).call(this);
