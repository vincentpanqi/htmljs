// Generated by CoffeeScript 1.9.3
(function() {
  var UglifyJS, config, fs, func_tools;

  func_tools = __F('tool');

  UglifyJS = require("uglify-js");

  fs = require('fs');

  config = __C;

  module.exports.controllers = {
    "/": {
      "get": function(req, res, next) {
        return func_tools.getAll(1, 50, null, "id", function(error, tools) {
          if (error) {
            return next(error);
          } else {
            res.locals.tools = tools;
            return res.render('tools/index.jade');
          }
        });
      }
    },
    "/:name": {
      get: function(req, res, next) {
        return func_tools.getAll(1, 50, null, "id", function(error, tools) {
          if (error) {
            return next(error);
          } else {
            res.locals.tools = tools;
            return func_tools.addCountByName(req.params.name, function(error, tool) {
              res.locals.t = tool;
              return next();
            });
          }
        });
      }
    },
    "/unicode": {
      "get": function(req, res, next) {
        return res.render('tools/unicode.jade');
      }
    },
    "/beautify": {
      "get": function(req, res, next) {
        return res.render('tools/beautify.jade');
      },
      "post": function(req, res, next) {
        var code, e, result, source;
        result = {
          success: 1
        };
        try {
          console.log(req.files);
          if (req.files && req.files['jsfile']) {
            code = UglifyJS.minify(req.files['jsfile'].path);
            source = config.upload_path + (new Date().getTime()) + Math.random();
            fs.writeFileSync(source, code.code);
            return res.download(source, req.files['jsfile'].name);
          } else if (req.body.text) {
            result.data = UglifyJS.minify(req.body.text, {
              fromString: true
            });
            return res.send(result);
          }
        } catch (_error) {
          e = _error;
          result.success = 0;
          result.info = e.message;
          return res.send(result);
        }
      }
    }
  };

  module.exports.filters = {
    "/": {
      get: ['freshLogin']
    },
    "/:name": {
      get: ['freshLogin']
    }
  };

}).call(this);
